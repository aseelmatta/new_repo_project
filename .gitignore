# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
# Flutter/Dart
**/doc/api/
**/ios/Flutter/.last_build_id
frontend/.dart_tool/
frontend/.flutter-plugins
frontend/.flutter-plugins-dependencies
frontend/.packages
frontend/.pub-cache/
frontend/.pub/
frontend/build/
frontend/coverage/
frontend/.metadata
frontend/pubspec.lock

# Android
frontend/android/app/debug
frontend/android/app/profile
frontend/android/app/release
frontend/android/key.properties
frontend/android/local.properties
frontend/android/**/gradle-wrapper.jar
frontend/android/.gradle
frontend/android/captures/

# iOS
frontend/ios/Pods/
frontend/ios/.symlinks/
frontend/ios/Flutter/App.framework
frontend/ios/Flutter/Flutter.framework
frontend/ios/Flutter/Flutter.podspec
frontend/ios/Flutter/Generated.xcconfig
frontend/ios/Flutter/ephemeral
frontend/ios/Runner.xcworkspace/xcshareddata/
frontend/ios/.generated/
frontend/ios/build/

# Firebase config files (to avoid exposing API keys)
google-services.json
GoogleService-Info.plist
firebase-credentials.json
**/firebase_options.dart

# VS Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets
.history/
*.vsix

# Emulator
.android/
.ios/

# Flutter web build files
frontend/web/assets/
frontend/web/packages/

# Flutter/Dart generated files
**/generated_plugin_registrant.*
**/GeneratedPluginRegistrant.*
**/generated_plugins.cmake
frontend/windows/flutter/generated_plugins.cmake
frontend/linux/flutter/generated_plugin_registrant.cc
frontend/linux/flutter/generated_plugin_registrant.h
frontend/linux/flutter/generated_plugin_registrant.cc
frontend/linux/flutter/generated_plugin_registrant.h
frontend/linux/flutter/generated_plugins.cmake
frontend/macos/Flutter/GeneratedPluginRegistrant.swift
frontend/windows/flutter/generated_plugin_registrant.cc
frontend/windows/flutter/generated_plugin_registrant.h
frontend/windows/flutter/generated_plugins.cmake
